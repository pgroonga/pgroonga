name: Linux
on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: |
        0 0 * * *
jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        label:
          - PostgreSQL 11
          - PostgreSQL 12
          - PostgreSQL 13
          - PostgreSQL 14
          - PostgreSQL 15
          - PostgreSQL 15 with Groonga master
          - PostgreSQL 16 snapshot
          - PostgreSQL 16 snapshot with Groonga master
        include:
          - label: PostgreSQL 11
            postgresql-version: "11"
          - label: PostgreSQL 12
            postgresql-version: "12"
          - label: PostgreSQL 13
            postgresql-version: "13"
          - label: PostgreSQL 14
            postgresql-version: "14"
          - label: PostgreSQL 15
            postgresql-version: "15"
          - label: PostgreSQL 15 with Groonga master
            groonga-master: "yes"
            postgresql-version: "15"
          - label: PostgreSQL 16 snapshot
            postgresql-unreleased: "yes"
            postgresql-version: "16"
          - label: PostgreSQL 16 snapshot with Groonga master
            groonga-master: "yes"
            postgresql-unreleased: "yes"
            postgresql-version: "16"
    env:
      GROONGA_MASTER: ${{ matrix.groonga-master }}
      POSTGRESQL_UNRELEASED: ${{ matrix.postgresql-unreleased }}
      PGROONGA_BENCHMARK_GEMFILE: ${{ github.workspace }}/pgroonga-benchmark/Gemfile
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/checkout@v3
        with:
          repository: pgroonga/benchmark
          path: pgroonga-benchmark
      - name: Install dependency
        run: |
          curl \
            --silent \
            --location \
            https://github.com/groonga/groonga/raw/master/data/travis/setup.sh | \
            sh
          if [ "${GROONGA_MASTER}" != "yes" ]; then
            sudo apt -y -V install \
              groonga-token-filter-stem \
              groonga-tokenizer-mecab \
              libmsgpack-dev
          fi
          sudo apt -y -V install \
            libxxhash-dev
      - name: Install PostgreSQL
        run: |
          sudo apt -y -V purge '^postgresql'
          suite=$(lsb_release -cs)-pgdg
          sudo tee /etc/apt/sources.list.d/pgdg.list <<APT_SOURCE
          deb http://apt.postgresql.org/pub/repos/apt ${suite} main
          APT_SOURCE
          if [ "${POSTGRESQL_UNRELEASED}" = "yes" ]; then
            suite="$(lsb_release -cs)-pgdg-snapshot"
            sudo tee /etc/apt/sources.list.d/pgdg-snapshot.list <<APT_SOURCE
          deb http://apt.postgresql.org/pub/repos/apt ${suite} ${{ matrix.postgresql-version }}
          APT_SOURCE
          fi
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt update
          sudo apt -y -V -t ${suite} install \
            postgresql-${{ matrix.postgresql-version }} \
            postgresql-server-dev-${{ matrix.postgresql-version }}
          if [ ${{ matrix.postgresql-version }} -eq 15 ]; then
            # It seems that PostgreSQL 15 dropped stats_temp_directory...?
            sudo sed -i'' \
              -e 's/^stats_temp_directory/#stats_temp_directory/g' \
              /etc/postgresql/15/main/postgresql.conf
          fi
          sudo systemctl restart postgresql
          sudo -u postgres -H psql -c "CREATE ROLE ${USER} SUPERUSER LOGIN;"
      - name: Run regression test
        run: |
          if [ "$(echo "${{ matrix.postgresql-version }} < 11" | bc)" -eq 1 ]; then
            rm sql/index-only-scan/include.sql
          fi
          if [ "$(echo "${{ matrix.postgresql-version }} < 13" | bc)" -eq 1 ]; then
            rm sql/full-text-search/text/single/declarative-partitioning.sql
          fi
          if [ "${GROONGA_MASTER}" = "yes" ]; then
            # TODO: We don't know why this case doesn't use parallel scan...
            rm sql/full-text-search/text/single/declarative-partitioning.sql
          fi
          test/run-sql-test.sh
        env:
          HAVE_XXHASH: "1"
          NEED_SUDO: "yes"
          PG_CONFIG: "/usr/lib/postgresql/${{ matrix.postgresql-version }}/bin/pg_config"
          SUPPRESS_LOG: "no"
      - name: Show diff
        if: failure()
        run: |
          cat regression.diffs
      - name: Show pgroonga.log
        if: failure()
        run: |
          sudo cat \
            /var/lib/postgresql/${{ matrix.postgresql-version }}/main/pgroonga.log
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          bundler-cache: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/red-datasets
          key: red-datasets-ubuntu
      - name: Run unit test
        run: |
          PATH="/usr/lib/postgresql/${{ matrix.postgresql-version }}/bin:$PATH" \
            bundle exec ruby \
              -I${{ github.workspace }}/pgroonga-benchmark/lib \
              test/run-test.rb
