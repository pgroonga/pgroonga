name: macOS
on:
  push:
  pull_request:
  schedule:
    - cron: |
        0 0 * * *
concurrency:
  group: ${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  test:
    if: >-
      github.event_name != 'schedule' ||
      (github.event_name == 'schedule' &&
       github.repository_owner == 'pgroonga')
    name: Test
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        postgresql-version:
          - "13"
          - "14"
          - "15"
          - "16"
          - "17"
    env:
      PGROONGA_BENCHMARK_GEMFILE: ${{ github.workspace }}/pgroonga-benchmark/Gemfile
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - uses: actions/checkout@v5
        with:
          repository: pgroonga/benchmark
          path: pgroonga-benchmark
      - name: Update Homebrew if needed
        run: |
          set -x
          required_groonga_version=$(grep "^REQUIRED_GROONGA_VERSION" makefiles/pgrn-pgxs.mk | cut -d' ' -f 3)
          homebrew_groonga_version=$(brew info --json groonga | jq -r '.[0].versions.stable')
          older_groonga_version=$( \
            (echo ${required_groonga_version}; \
             echo ${homebrew_groonga_version}) | \
              sort --version-sort | \
              head -n1 \
          )
          if ([ "${older_groonga_version}" = "${homebrew_groonga_version}" ] && \
              [ "${homebrew_groonga_version}" != "${required_groonga_version}" ]) || \
             ! brew info postgresql@${{ matrix.postgresql-version }}; then
            brew update
            # Force overwriting Python related symbolic links because
            # Python related files in $(brew --prefix)/bin/ are provided
            # system Python that is pre-installed on GitHub Actions
            # runner.
            brew install --overwrite python@3.12 python@3.11 python@3.10
          fi
      - name: Install dependency
        run: |
          sed \
            -i '' \
            -e 's/postgresql/postgresql@${{ matrix.postgresql-version }}/g' \
            Brewfile
          brew bundle
      - name: Update maxfiles limit
        # To avoid the error `system call error: Too many open files`.
        run: sudo launchctl limit maxfiles unlimited unlimited
      - name: Prepare PostgreSQL
        run: |
          cat <<CONF >> $(brew --prefix)/var/postgresql@${{ matrix.postgresql-version }}/postgresql.conf
          enable_partitionwise_join = on
          max_prepared_transactions = 1
          random_page_cost = 0
          CONF
          brew services start postgresql@${{ matrix.postgresql-version }}
          echo $(brew --prefix postgresql@${{ matrix.postgresql-version }})/bin >> \
            ${GITHUB_PATH}
      - name: Configure PGroonga
        run: |
          meson setup \
            --buildtype=debug \
            -Dpg_config=$(brew --prefix postgresql@${{ matrix.postgresql-version }})/bin/pg_config \
            ../pgroonga.build
      - name: Build PGroonga
        run: |
          meson compile -C ../pgroonga.build
      - name: Install PGroonga
        run: |
          meson install -C ../pgroonga.build
      - name: Run regression test
        run: |
          # TODO: Remove me when groonga formula enables libstemmer
          rm sql/full-text-search/text/options/token-filters/custom.sql
          meson test -C ../pgroonga.build -v
      - name: Show diff
        if: failure()
        run: |
          cat ../pgroonga.build/regression.diffs
      - name: Show pgroonga.log
        if: failure()
        run: |
          cat \
            $(brew --prefix)/var/postgresql@${{ matrix.postgresql-version }}/pgroonga.log
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby
          bundler-cache: true
          cache-version: ${{ matrix.postgresql-version }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/red-datasets
          key: red-datasets-macos
      - name: Run unit test
        run: |
          PATH="$(brew --prefix postgresql@${{ matrix.postgresql-version }})/bin:$PATH" \
            bundle exec ruby \
              -I${{ github.workspace }}/pgroonga-benchmark/lib \
              test/run-test.rb \
              --ignore-testcase=/CrashSafer/ \
              --ignore-testcase=/StreamingReplication/ \
              --verbose
