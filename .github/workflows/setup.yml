name: Setup
on:
  push:
  pull_request:
    branches:
      - "*"
concurrency:
  group: ${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - "images:debian/12"
          - "images:ubuntu/22.04"
          - "images:ubuntu/24.04"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/checkout@v4
        with:
          path: "groonga"
          repository: "groonga/groonga"
          submodules: recursive
      - name: Install Incus
        run: |
          # We can use the official Ubuntu APT repository when
          # ubuntu-latest is Ubuntu 24.04.
          sudo curl -fsSL https://pkgs.zabbly.com/key.asc -o /etc/apt/keyrings/zabbly.asc
          cat <<SOURCES | sudo tee /etc/apt/sources.list.d/zabbly-incus-stable.sources
          Enabled: yes
          Types: deb
          URIs: https://pkgs.zabbly.com/incus/stable
          Suites: $(. /etc/os-release && echo ${VERSION_CODENAME})
          Components: main
          Architectures: $(dpkg --print-architecture)
          Signed-By: /etc/apt/keyrings/zabbly.asc
          SOURCES

          sudo apt update
          sudo apt install -y -V incus
      - name: Allow egress network traffic flows for Incus
        # https://linuxcontainers.org/incus/docs/main/howto/network_bridge_firewalld/#prevent-connectivity-issues-with-incus-and-docker
        run: |
          sudo iptables -I DOCKER-USER -i incusbr0 -j ACCEPT
          sudo iptables -I DOCKER-USER -o incusbr0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
      - name: Setup
        run: |
          set -x
          sudo incus admin init --auto
          sudo incus launch ${{ matrix.image }} target
          sudo incus config device add target host disk source=$PWD path=/host
          sudo incus exec target -- adduser --uid 10000 pgroonga
          sudo incus exec target -- \
            sh -c "echo 'pgroonga ALL=(ALL:ALL) NOPASSWD:ALL' | \
                     EDITOR='tee -a' visudo -f /etc/sudoers.d/pgroonga-nopasswd"
          sudo incus exec target -- /host/setup.sh
          sudo incus exec target --user 10000 --group 10000 -- \
            /host/build.sh /host /tmp/build \
              sql/full-text-search/text/single/query-v2/indexscan.sql
          sudo incus stop target
          sudo incus delete target
