version: "{build}"
clone_depth: 10
environment:
  matrix:
    - VS_VERSION: 14
      ARCH: x86
      POSTGRESQL_VERSION: 9.6.19-1
      POSTGRESQL_VERSION_MAJOR: 9.6
    - VS_VERSION: 14
      ARCH: x64
      POSTGRESQL_VERSION: 9.6.19-1
      POSTGRESQL_VERSION_MAJOR: 9.6
    - VS_VERSION: 14
      ARCH: x86
      POSTGRESQL_VERSION: 10.14-1
      POSTGRESQL_VERSION_MAJOR: 10
    - VS_VERSION: 14
      ARCH: x64
      POSTGRESQL_VERSION: 10.14-1
      POSTGRESQL_VERSION_MAJOR: 10
    - VS_VERSION: 14
      ARCH: x64
      POSTGRESQL_VERSION: 11.9-1
      POSTGRESQL_VERSION_MAJOR: 11
    - VS_VERSION: 14
      ARCH: x64
      POSTGRESQL_VERSION: 12.4-1
      POSTGRESQL_VERSION_MAJOR: 12
    - VS_VERSION: 14
      ARCH: x64
      POSTGRESQL_VERSION: 13.0-1
      POSTGRESQL_VERSION_MAJOR: 13
    - VS_VERSION: 14
      ARCH: x64
      GROONGA_MASTER: "yes"
      POSTGRESQL_VERSION: 13.0-1
      POSTGRESQL_VERSION_MAJOR: 13
notifications:
  - provider: Webhook
    url: https://webhook.commit-email.info/
# init:
#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
install:
  - set PATH=C:\Ruby26-x64\bin;%PATH%
  - set PATH=C:\msys64\usr\bin;%PATH%
  - gem install test-unit
build_script:
  - git submodule update --init
  - cd ..

  # PostgreSQL
  - ps: |
      $Env:POSTGRESQL_ARCHIVE_NAME = "postgresql-$Env:POSTGRESQL_VERSION-windows"
      if ($Env:ARCH -eq "x64") {
        $Env:POSTGRESQL_ARCHIVE_NAME += "-$Env:ARCH"
      }
      $Env:POSTGRESQL_ARCHIVE_NAME += "-binaries.zip"
  - ps: |
      Invoke-WebRequest `
        https://get.enterprisedb.com/postgresql/$Env:POSTGRESQL_ARCHIVE_NAME `
        -OutFile $Env:POSTGRESQL_ARCHIVE_NAME
  - ps: |
      Expand-Archive -Path $Env:POSTGRESQL_ARCHIVE_NAME -DestinationPath .

  - cd pgroonga

  # Groonga
  - |
    call "C:\Program Files (x86)\Microsoft Visual Studio %VS_VERSION%.0\VC\vcvarsall.bat" %ARCH%
  - ps: |
      if ($Env:GROONGA_MASTER -eq "yes") {
        git clone --depth 1 `
          https://github.com/groonga/groonga.git `
          vendor\groonga
        cd vendor\groonga
        git submodule update --init --depth 1
        cd vendor
        ruby download_lz4.rb
        ruby download_mecab.rb
        ruby download_message_pack.rb
        ruby download_rapidjson.rb
        cd ..\..\..
      } else {
        Invoke-WebRequest `
          https://packages.groonga.org/source/groonga/groonga-latest.zip `
          -OutFile groonga-latest.zip
        Expand-Archive -Path groonga-latest.zip -DestinationPath .
        rm groonga-latest.zip
        mv groonga-* vendor\groonga
      }
  - set CMAKE_GENERATOR_NAME=Visual Studio %VS_VERSION%
  - if "%VS_VERSION%" == "12"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2013
  - if "%VS_VERSION%" == "14"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2015
  - if "%ARCH%" == "x64"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% Win64
  - cmake . -G "%CMAKE_GENERATOR_NAME%"
      -DCMAKE_INSTALL_PREFIX="..\\pgsql"
      -DPGRN_POSTGRESQL_VERSION_MAJOR=%POSTGRESQL_VERSION_MAJOR%
      -DGRN_WITH_MRUBY=yes
  - set CMAKE_BUILD_PARALLEL_LEVEL=4
  - cmake --build . --config RelWithDebInfo
  - cmake --build . --config RelWithDebInfo --target install
  - cmake --build . --config RelWithDebInfo --target package

test_script:
  # TODO: Remove me when Groonga bundles libstemmer
  - rm sql/full-text-search/text/options/token-filters/custom.sql
  # Reduce tests to reduce test time
  - rm -rf sql/compatibility
  - find sql/* -type d | sed -e 's,^sql,results,' | xargs mkdir -p
  - find sql -name '*.sql' |
      sed -e 's,^sql/,test:\ ,g' |
      sed -e 's,\.sql$,,g' > schedule
  - ps: Set-Culture ja-JP
  - set PG_REGRESS_DIFF_OPTS=-u
  - ..\pgsql\bin\pg_regress
      --bindir=..\pgsql\bin
      --load-extension=pgroonga
      --temp-instance=..\pgsql\test
      --schedule=schedule
      --launcher=test\short-pgappname.bat
  - set PATH=%CD%\..\pgsql\bin;%PATH%
  # TODO: Remove me when we fix test failure on Windows
  - rm test/test-streaming-replication.rb
  - ruby test\run-test.rb

on_failure:
  - type regression.diffs

on_finish:
  - ps: |
      if ($Env:GROONGA_MASTER -ne "yes") {
        $Env:PGROONGA_VERSION = (Get-Content pgroonga.control)[0] -replace "^.*'(.+)'","`$1"
        Push-AppveyorArtifact pgroonga-$Env:PGROONGA_VERSION-postgresql-$Env:POSTGRESQL_VERSION_MAJOR-$Env:ARCH.zip
      }
